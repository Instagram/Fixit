{
  "types": [
    {
      "location": {
        "start": {
          "line": 1,
          "column": 10
        },
        "stop": {
          "line": 1,
          "column": 13
        }
      },
      "annotation": "typing.Callable(fixit.tests.fixtures.await_async_call.tmpujja92f_.foo)[[], typing.Coroutine[typing.Any, typing.Any, bool]]"
    },
    {
      "location": {
        "start": {
          "line": 1,
          "column": 19
        },
        "stop": {
          "line": 1,
          "column": 23
        }
      },
      "annotation": "typing.Type[bool]"
    },
    {
      "location": {
        "start": {
          "line": 2,
          "column": 0
        },
        "stop": {
          "line": 2,
          "column": 1
        }
      },
      "annotation": "bool"
    },
    {
      "location": {
        "start": {
          "line": 2,
          "column": 4
        },
        "stop": {
          "line": 2,
          "column": 8
        }
      },
      "annotation": "typing_extensions.Literal[True]"
    },
    {
      "location": {
        "start": {
          "line": 3,
          "column": 3
        },
        "stop": {
          "line": 3,
          "column": 4
        }
      },
      "annotation": "bool"
    },
    {
      "location": {
        "start": {
          "line": 3,
          "column": 3
        },
        "stop": {
          "line": 3,
          "column": 14
        }
      },
      "annotation": "typing.Union[typing.Coroutine[typing.Any, typing.Any, bool], bool]"
    },
    {
      "location": {
        "start": {
          "line": 3,
          "column": 9
        },
        "stop": {
          "line": 3,
          "column": 12
        }
      },
      "annotation": "typing.Callable(fixit.tests.fixtures.await_async_call.tmpujja92f_.foo)[[], typing.Coroutine[typing.Any, typing.Any, bool]]"
    },
    {
      "location": {
        "start": {
          "line": 3,
          "column": 9
        },
        "stop": {
          "line": 3,
          "column": 14
        }
      },
      "annotation": "typing.Coroutine[typing.Any, typing.Any, bool]"
    }
  ]
}